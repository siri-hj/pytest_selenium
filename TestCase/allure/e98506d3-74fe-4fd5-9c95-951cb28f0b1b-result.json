{"name": "test_login_error", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message:", "trace": "self = <selenium_pytest.TestCase.test_search.TestSearch object at 0x000002206BA77430>\ndrivers = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"436eb65809859fa372d9f928f7fea12e\")>\n\n    @allure.story(\"登录失败case\")\n    def test_login_error(self, drivers):\n        \"\"\"测试搜索候选\"\"\"\n        search = SearchPage(drivers)\n        search.input_search_name(\"17379966461\")\n        search.input_search_password(\"hj123456\")\n        search.click_search()\n    \n        str = '密码错误'\n>       assert str in search.get_infor()\n\ntest_search.py:42: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\page_object\\searchpage.py:32: in get_infor\n    return self.element_text(search['错误信息'])\n..\\page\\webpage.py:74: in element_text\n    _text = self.find_element(locator).text\n..\\page\\webpage.py:44: in find_element\n    return WebPage.element_locator(lambda *args: self.wait.until(\n..\\page\\webpage.py:40: in element_locator\n    return func(cm.LOCATE_MODE[name], value)\n..\\page\\webpage.py:44: in <lambda>\n    return WebPage.element_locator(lambda *args: self.wait.until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"436eb65809859fa372d9f928f7fea12e\")>\nmethod = <selenium.webdriver.support.expected_conditions.presence_of_element_located object at 0x000002206BADF3A0>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nD:\\python3.8\\python-3.8.2\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:80: TimeoutException"}, "description": "测试搜索候选", "attachments": [{"name": "失败截图20211228172810", "source": "3c73c4fa-eb27-42f4-8e61-004fa09fd545-attachment.png", "type": "image/png"}, {"name": "log", "source": "7552caa4-bf87-4a19-88d0-4bd3d57aa69e-attachment.txt", "type": "text/plain"}], "start": 1640683664879, "stop": 1640683690248, "uuid": "3727e06d-72da-4979-93ef-63dfb471208c", "historyId": "806165bf4d91a502e56be7c9e6a3b82e", "testCaseId": "78b42247db1cc1e68a3d3f8101f01020", "fullName": "TestCase.test_search.TestSearch#test_login_error", "labels": [{"name": "story", "value": "登录失败case"}, {"name": "feature", "value": "测试百度模块"}, {"name": "parentSuite", "value": "TestCase"}, {"name": "suite", "value": "test_search"}, {"name": "subSuite", "value": "TestSearch"}, {"name": "host", "value": "DESKTOP-R0T260V"}, {"name": "thread", "value": "19224-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "TestCase.test_search"}]}